{
    "dataset": "complexDataset",
    "description": "This is a more complex SPARQL example",
    "data": [
        {
            "s": "http://example.org/subject1",
            "p": "http://example.org/predicate1",
            "o": "http://example.org/object1"
        },
        {
            "s": "http://example.org/subject1",
            "p": "http://example.org/predicate2",
            "o": "http://example.org/object2"
        },
        {
            "s": "http://example.org/subject2",
            "p": "http://example.org/predicate1",
            "o": "http://example.org/object3"
        },
        {
            "s": "http://example.org/subject2",
            "p": "http://example.org/predicate3",
            "o": "http://example.org/object4"
        },
        {
            "s": "http://example.org/subject3",
            "p": "http://example.org/predicate1",
            "o": "http://example.org/object1"
        },
        {
            "s": "http://example.org/subject3",
            "p": "http://example.org/predicate2",
            "o": "http://example.org/object3"
        }
    ],
    "queries": [
        {
            "name": "Query 1",
            "description": "Select all triples where the object is 'http://example.org/object3'.",
            "sparql": "SELECT ?s ?p WHERE { ?s ?p <http://example.org/object3> }",
            "expected": {
                "result": [
                    {
                        "s": "http://example.org/subject2",
                        "p": "http://example.org/predicate1"
                    },
                    {
                        "s": "http://example.org/subject3",
                        "p": "http://example.org/predicate2"
                    }
                ],
                "length": 2
            }
        },
        {
            "name": "Query 2",
            "description": "Select subjects with a count of distinct predicates used, ordered by count descending.",
            "sparql": "SELECT ?s (COUNT(DISTINCT ?p) AS ?predicateCount) WHERE { ?s ?p ?o } GROUP BY ?s ORDER BY DESC(?predicateCount)",
            "expected": {
                "result": [
                    {
                        "s": "http://example.org/subject1",
                        "predicateCount": "2"
                    },
                    {
                        "s": "http://example.org/subject2",
                        "predicateCount": "2"
                    },
                    {
                        "s": "http://example.org/subject3",
                        "predicateCount": "2"
                    }
                ],
                "length": 3
            }
        },
        {
            "name": "Query 3",
            "description": "Select all subjects and objects, ordered by subject and object lexicographically.",
            "sparql": "SELECT ?s ?o WHERE { ?s ?p ?o } ORDER BY ?s ?o",
            "expected": {
                "result": [
                    {
                        "s": "http://example.org/subject1",
                        "o": "http://example.org/object1"
                    },
                    {
                        "s": "http://example.org/subject1",
                        "o": "http://example.org/object2"
                    },
                    {
                        "s": "http://example.org/subject2",
                        "o": "http://example.org/object3"
                    },
                    {
                        "s": "http://example.org/subject2",
                        "o": "http://example.org/object4"
                    },
                    {
                        "s": "http://example.org/subject3",
                        "o": "http://example.org/object1"
                    },
                    {
                        "s": "http://example.org/subject3",
                        "o": "http://example.org/object3"
                    }
                ],
                "length": 6
            }
        },
        {
            "name": "Query 4",
            "description": "Select all triples where the predicate is not 'http://example.org/predicate1', ordered by object descending.",
            "sparql": "SELECT ?s ?p ?o WHERE { ?s ?p ?o FILTER(?p != <http://example.org/predicate1>) } ORDER BY DESC(?o)",
            "expected": {
                "result": [
                    {
                        "s": "http://example.org/subject2",
                        "p": "http://example.org/predicate3",
                        "o": "http://example.org/object4"
                    },
                    {
                        "s": "http://example.org/subject3",
                        "p": "http://example.org/predicate2",
                        "o": "http://example.org/object3"
                    },
                    {
                        "s": "http://example.org/subject1",
                        "p": "http://example.org/predicate2",
                        "o": "http://example.org/object2"
                    }
                ],
                "length": 3
            }
        },
        {
            "name": "Query 5",
            "description": "Select all unique predicates used across the dataset.",
            "sparql": "SELECT DISTINCT ?p WHERE { ?s ?p ?o }",
            "expected": {
                "result": [
                    {
                        "p": "http://example.org/predicate1"
                    },
                    {
                        "p": "http://example.org/predicate2"
                    },
                    {
                        "p": "http://example.org/predicate3"
                    }
                ],
                "length": 3
            }
        }
    ]
}